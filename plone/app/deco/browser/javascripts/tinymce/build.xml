<?xml version="1.0" encoding="UTF-8"?>
<project name="TinyMCE" default="build" basedir=".">
	<!-- Path properties -->
	<property description="Classes directory" name="classes_dir" location="source/jscripts/tiny_mce/classes" />
	<property description="Build directory" name="build_dir" location="." />
	<property description="Temp directory" name="temp_dir" location="tmp" />
	<property environment="env" />

	<!-- Setup classpath for js-build-tools ant tasks -->
	<path id="tasks.classpath">
		<pathelement location="."/>

		<fileset dir="source/tools/ant">
			<include name="**/*.jar"/>
		</fileset>
	</path>

	<!-- use a build number from the environment, defaulting it if not set. -->
	<target name="default-build-number" unless="env.BUILD_NUMBER">
		<tstamp />
		<property description="Build number" name="build-number" value="${DSTAMP}${TSTAMP}" />
		<echo message="${build-number}" />
	</target>
	<target name="env-build-number" if="env.BUILD_NUMBER">
		<property description="Build number" name="build-number" value="${env.BUILD_NUMBER}" />
	</target>
	<target name="init-build-number" depends="env-build-number,default-build-number"/>
	
	<!-- Register new js-build-tools ant tasks -->
	<taskdef name="preprocess" classname="com.moxiecode.ant.tasks.PreProcessTask" classpathref="tasks.classpath" loaderref="tasks.classpath.loader" />
	<taskdef name="yuicompress" classname="com.moxiecode.ant.tasks.YuiCompressTask" classpathref="tasks.classpath" loaderref="tasks.classpath.loader" />
	<taskdef name="moxiedoc" classname="com.moxiecode.ant.tasks.MoxieDocTask" classpathref="tasks.classpath" loaderref="tasks.classpath.loader" />
	<taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="tasks.classpath" loaderref="tasks.classpath.loader" />

	<!-- Cleanup the build -->
	<target name="clean" depends="" description="Cleans up the project from temporary files">
		<delete dir="${temp_dir}" quiet="true" />
	</target>

	<!-- Concat and minify classes and scripts -->
	<target name="build" depends="" description="Builds the project">
		<!-- Combine all class files into one single script file -->
		<concat destfile="${build_dir}/tiny_mce_tmp.js" fixlastline="yes">
			<!-- tinymce base -->
			<fileset dir="${classes_dir}" includes="tinymce.js" />
			<fileset dir="${classes_dir}" includes="adapter/jquery/adapter.js" />

			<!-- tinymce.util.* -->
			<fileset dir="${classes_dir}" includes="util/Dispatcher.js" />
			<fileset dir="${classes_dir}" includes="util/URI.js" />
			<fileset dir="${classes_dir}" includes="util/Cookie.js" />
			<fileset dir="${classes_dir}" includes="util/JSON.js" />
			<fileset dir="${classes_dir}" includes="util/XHR.js" />
			<fileset dir="${classes_dir}" includes="util/JSONRequest.js" />
			<fileset dir="${classes_dir}" includes="util/VK.js" />
			<fileset dir="${classes_dir}" includes="util/Quirks.js" />

			<!-- tinymce.html.* -->
			<fileset dir="${classes_dir}" includes="html/Entities.js" />
			<fileset dir="${classes_dir}" includes="html/Styles.js" />
			<fileset dir="${classes_dir}" includes="html/Schema.js" />
			<fileset dir="${classes_dir}" includes="html/SaxParser.js" />
			<fileset dir="${classes_dir}" includes="html/Node.js" />
			<fileset dir="${classes_dir}" includes="html/DomParser.js" />
			<fileset dir="${classes_dir}" includes="html/Writer.js" />
			<fileset dir="${classes_dir}" includes="html/Serializer.js" />

			<!-- tinymce.dom.* -->
			<fileset dir="${classes_dir}" includes="dom/DOMUtils.js" />
			<fileset dir="${classes_dir}" includes="dom/Range.js" />
			<fileset dir="${classes_dir}" includes="dom/TridentSelection.js" />
			<fileset dir="${classes_dir}" includes="dom/Sizzle.js" />
			<fileset dir="${classes_dir}" includes="dom/EventUtils.js" />
			<fileset dir="${classes_dir}" includes="dom/Element.js" />
			<fileset dir="${classes_dir}" includes="dom/Selection.js" />
			<fileset dir="${classes_dir}" includes="dom/Serializer.js" />
			<fileset dir="${classes_dir}" includes="dom/ScriptLoader.js" />
			<fileset dir="${classes_dir}" includes="dom/TreeWalker.js" />
			<fileset dir="${classes_dir}" includes="dom/RangeUtils.js" />

			<!-- tinymce.ui.* -->
			<fileset dir="${classes_dir}" includes="ui/KeyboardNavigation.js" />
			<fileset dir="${classes_dir}" includes="ui/Control.js" />
			<fileset dir="${classes_dir}" includes="ui/Container.js" />
			<fileset dir="${classes_dir}" includes="ui/Separator.js" />
			<fileset dir="${classes_dir}" includes="ui/MenuItem.js" />
			<fileset dir="${classes_dir}" includes="ui/Menu.js" />
			<fileset dir="${classes_dir}" includes="ui/DropMenu.js" />
			<fileset dir="${classes_dir}" includes="ui/Button.js" />
			<fileset dir="${classes_dir}" includes="ui/ListBox.js" />
			<fileset dir="${classes_dir}" includes="ui/NativeListBox.js" />
			<fileset dir="${classes_dir}" includes="ui/MenuButton.js" />
			<fileset dir="${classes_dir}" includes="ui/SplitButton.js" />
			<fileset dir="${classes_dir}" includes="ui/ColorSplitButton.js" />
			<fileset dir="${classes_dir}" includes="ui/ToolbarGroup.js" />
			<fileset dir="${classes_dir}" includes="ui/Toolbar.js" />

			<!-- tinymce.* -->
			<fileset dir="${classes_dir}" includes="AddOnManager.js" />
			<fileset dir="${classes_dir}" includes="EditorManager.js" />
			<fileset dir="${classes_dir}" includes="Editor.js" />
			<fileset dir="${classes_dir}" includes="EditorCommands.js" />
			<fileset dir="${classes_dir}" includes="UndoManager.js" />
			<fileset dir="${classes_dir}" includes="ForceBlocks.js" />
			<fileset dir="${classes_dir}" includes="ControlManager.js" />
			<fileset dir="${classes_dir}" includes="WindowManager.js" />
			<fileset dir="${classes_dir}" includes="Formatter.js" />
			<fileset dir="${classes_dir}" includes="LegacyInput.js" />
		</concat>

		<!-- Remove all jsdoc style comments -->
		<replaceregexp match="/\*\*(.*?)\*\/\s*" replace="" flags="gs" byline="false" file="${build_dir}/tiny_mce_tmp.js" />

		<!-- Preprocess core -->
		<preprocess infile="${build_dir}/tiny_mce_tmp.js" outfile="${build_dir}/tiny_mce_deco_src.js" defines="jquery,jquery_adapter,contentEditable" />

		<!-- Compress core -->
		<yuicompress infile="${build_dir}/tiny_mce_deco_src.js" outfile="${build_dir}/tiny_mce_deco.js" />

		<!-- Cleanup -->
		<delete file="${build_dir}/tiny_mce_tmp.js" quiet="true"/>
	</target>

</project>
